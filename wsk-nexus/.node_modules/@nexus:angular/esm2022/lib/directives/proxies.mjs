import { __decorate } from "tslib";
/* tslint:disable */
/* auto-generated angular directive proxies */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ProxyCmp, proxyOutputs } from './angular-component-lib/utils';
import * as i0 from "@angular/core";
export let NexusAccordion = class NexusAccordion {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['toggleEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordion, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusAccordion, selector: "nexus-accordion", inputs: { open: "open", size: "size" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusAccordion = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['open', 'size']
    })
], NexusAccordion);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordion, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-accordion',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['open', 'size']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusAccordionContent = class NexusAccordionContent {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusAccordionContent, selector: "nexus-accordion-content", inputs: { size: "size" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusAccordionContent = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['size']
    })
], NexusAccordionContent);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionContent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-accordion-content',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['size']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusAccordionGroup = class NexusAccordionGroup {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusAccordionGroup, selector: "nexus-accordion-group", inputs: { alwaysOpen: "alwaysOpen" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusAccordionGroup = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['alwaysOpen']
    })
], NexusAccordionGroup);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionGroup, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-accordion-group',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['alwaysOpen']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusAccordionTrigger = class NexusAccordionTrigger {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_triggerClick']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionTrigger, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusAccordionTrigger, selector: "nexus-accordion-trigger", inputs: { align: "align" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusAccordionTrigger = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['align']
    })
], NexusAccordionTrigger);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAccordionTrigger, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-accordion-trigger',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['align']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusAvatar = class NexusAvatar {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAvatar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusAvatar, selector: "nexus-avatar", inputs: { alt: "alt", avatarClassName: "avatarClassName", avatarDark: "avatarDark", avatarImageSrc: "avatarImageSrc", avatarLogoIcon: "avatarLogoIcon", avatarNameDisplay: "avatarNameDisplay", avatarNotification: "avatarNotification", avatarSize: "avatarSize", avatarStatus: "avatarStatus", description: "description", label: "label", size: "size", src: "src", status: "status", type: "type", userName: "userName" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusAvatar = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['alt', 'avatarClassName', 'avatarDark', 'avatarImageSrc', 'avatarLogoIcon', 'avatarNameDisplay', 'avatarNotification', 'avatarSize', 'avatarStatus', 'description', 'label', 'size', 'src', 'status', 'type', 'userName']
    })
], NexusAvatar);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusAvatar, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-avatar',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['alt', 'avatarClassName', 'avatarDark', 'avatarImageSrc', 'avatarLogoIcon', 'avatarNameDisplay', 'avatarNotification', 'avatarSize', 'avatarStatus', 'description', 'label', 'size', 'src', 'status', 'type', 'userName']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusBadge = class NexusBadge {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBadge, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusBadge, selector: "nexus-badge", inputs: { overlap: "overlap", variant: "variant" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusBadge = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['overlap', 'variant']
    })
], NexusBadge);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBadge, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-badge',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['overlap', 'variant']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusBarChart = class NexusBarChart {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['nexusBarChartLoaded']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBarChart, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusBarChart, selector: "nexus-bar-chart", inputs: { attrId: "attrId", axisLabelFontSize: "axisLabelFontSize", axisTickFontFamily: "axisTickFontFamily", axisTickFontSize: "axisTickFontSize", barStroke: "barStroke", barStrokeWidth: "barStrokeWidth", canvasHeight: "canvasHeight", canvasWidth: "canvasWidth", chartData: "chartData", chartId: "chartId", colorScheme: "colorScheme", data: "data", gridlines: "gridlines", height: "height", hideXAxis: "hideXAxis", hideXTicks: "hideXTicks", hideYAxis: "hideYAxis", hideYTicks: "hideYTicks", inverse: "inverse", legend: "legend", legendFontSize: "legendFontSize", legendMetric: "legendMetric", legendWidth: "legendWidth", linearFormat: "linearFormat", linearMetric: "linearMetric", linearTickFormat: "linearTickFormat", marginBottom: "marginBottom", marginLeft: "marginLeft", marginRight: "marginRight", marginTop: "marginTop", maxBarWidth: "maxBarWidth", ordinalMetric: "ordinalMetric", orientation: "orientation", stroke: "stroke", strokeWidth: "strokeWidth", tooltips: "tooltips", valueMetric: "valueMetric", width: "width", xLabel: "xLabel", xTickSize: "xTickSize", yLabel: "yLabel", yTickSize: "yTickSize" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusBarChart = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'barStroke', 'barStrokeWidth', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearFormat', 'linearMetric', 'linearTickFormat', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'maxBarWidth', 'ordinalMetric', 'orientation', 'stroke', 'strokeWidth', 'tooltips', 'valueMetric', 'width', 'xLabel', 'xTickSize', 'yLabel', 'yTickSize']
    })
], NexusBarChart);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBarChart, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-bar-chart',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'barStroke', 'barStrokeWidth', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearFormat', 'linearMetric', 'linearTickFormat', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'maxBarWidth', 'ordinalMetric', 'orientation', 'stroke', 'strokeWidth', 'tooltips', 'valueMetric', 'width', 'xLabel', 'xTickSize', 'yLabel', 'yTickSize']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusBreadcrumb = class NexusBreadcrumb {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBreadcrumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusBreadcrumb, selector: "nexus-breadcrumb", inputs: { separator: "separator" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusBreadcrumb = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['separator']
    })
], NexusBreadcrumb);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBreadcrumb, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-breadcrumb',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['separator']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusBreadcrumbItem = class NexusBreadcrumbItem {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBreadcrumbItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusBreadcrumbItem, selector: "nexus-breadcrumb-item", inputs: { disabled: "disabled" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusBreadcrumbItem = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['disabled']
    })
], NexusBreadcrumbItem);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusBreadcrumbItem, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-breadcrumb-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['disabled']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCard = class NexusCard {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCard, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCard, selector: "nexus-card", inputs: { bgColor: "bgColor", bgImage: "bgImage", clickable: "clickable", height: "height" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCard = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['bgColor', 'bgImage', 'clickable', 'height']
    })
], NexusCard);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCard, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['bgColor', 'bgImage', 'clickable', 'height']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardAvatar = class NexusCardAvatar {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardAvatar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardAvatar, selector: "nexus-card-avatar", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardAvatar = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardAvatar);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardAvatar, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-avatar',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardBody = class NexusCardBody {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardBody, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardBody, selector: "nexus-card-body", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardBody = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardBody);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardBody, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-body',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardBodyImage = class NexusCardBodyImage {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardBodyImage, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardBodyImage, selector: "nexus-card-body-image", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardBodyImage = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardBodyImage);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardBodyImage, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-body-image',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardFooter = class NexusCardFooter {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardFooter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardFooter, selector: "nexus-card-footer", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardFooter = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardFooter);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardFooter, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-footer',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardHeader = class NexusCardHeader {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardHeader, selector: "nexus-card-header", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardHeader = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardHeader);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeader, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-header',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardHeaderButton = class NexusCardHeaderButton {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardHeaderButton, selector: "nexus-card-header-button", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardHeaderButton = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardHeaderButton);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderButton, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-header-button',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardHeaderDetails = class NexusCardHeaderDetails {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderDetails, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardHeaderDetails, selector: "nexus-card-header-details", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardHeaderDetails = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardHeaderDetails);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderDetails, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-header-details',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardHeaderSubtitle = class NexusCardHeaderSubtitle {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderSubtitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardHeaderSubtitle, selector: "nexus-card-header-subtitle", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardHeaderSubtitle = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardHeaderSubtitle);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderSubtitle, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-header-subtitle',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCardHeaderTitle = class NexusCardHeaderTitle {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderTitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCardHeaderTitle, selector: "nexus-card-header-title", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCardHeaderTitle = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCardHeaderTitle);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCardHeaderTitle, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-card-header-title',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCarousel = class NexusCarousel {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCarousel, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCarousel, selector: "nexus-carousel", inputs: { options: "options" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCarousel = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['options']
    })
], NexusCarousel);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCarousel, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-carousel',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['options']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCarouselItem = class NexusCarouselItem {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCarouselItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCarouselItem, selector: "nexus-carousel-item", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCarouselItem = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCarouselItem);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCarouselItem, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-carousel-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCharts = class NexusCharts {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCharts, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCharts, selector: "nexus-charts", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCharts = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusCharts);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCharts, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-charts',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusCheckbox = class NexusCheckbox {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCheckbox, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusCheckbox, selector: "nexus-checkbox", inputs: { attrId: "attrId", checked: "checked", disabled: "disabled", indeterminate: "indeterminate", required: "required" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusCheckbox = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'checked', 'disabled', 'indeterminate', 'required']
    })
], NexusCheckbox);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusCheckbox, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-checkbox',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'checked', 'disabled', 'indeterminate', 'required']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusChip = class NexusChip {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['triggerRemovableClick']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusChip, selector: "nexus-chip", inputs: { disabled: "disabled", error: "error", removable: "removable", success: "success" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusChip = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['disabled', 'error', 'removable', 'success']
    })
], NexusChip);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusChip, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-chip',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['disabled', 'error', 'removable', 'success']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusChipGroup = class NexusChipGroup {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusChipGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusChipGroup, selector: "nexus-chip-group", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusChipGroup = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusChipGroup);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusChipGroup, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-chip-group',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusDropdown = class NexusDropdown {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusDropdown, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusDropdown, selector: "nexus-dropdown", inputs: { dropdownType: "dropdownType", height: "height", placement: "placement", show: "show", width: "width" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusDropdown = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['dropdownType', 'height', 'placement', 'show', 'width'],
        methods: ['setDropdownTop']
    })
], NexusDropdown);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusDropdown, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-dropdown',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['dropdownType', 'height', 'placement', 'show', 'width']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusErrorMessage = class NexusErrorMessage {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusErrorMessage, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusErrorMessage, selector: "nexus-error-message", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusErrorMessage = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusErrorMessage);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusErrorMessage, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-error-message',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFileUpload = class NexusFileUpload {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['errorEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFileUpload, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFileUpload, selector: "nexus-file-upload", inputs: { accept: "accept", attrId: "attrId", disabled: "disabled", multiple: "multiple", required: "required" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFileUpload = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['accept', 'attrId', 'disabled', 'multiple', 'required']
    })
], NexusFileUpload);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFileUpload, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-file-upload',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['accept', 'attrId', 'disabled', 'multiple', 'required']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooter = class NexusFooter {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooter, selector: "nexus-footer", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooter = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooter);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooter, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooterBottom = class NexusFooterBottom {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterBottom, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooterBottom, selector: "nexus-footer-bottom", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooterBottom = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooterBottom);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterBottom, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer-bottom',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooterColumn = class NexusFooterColumn {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterColumn, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooterColumn, selector: "nexus-footer-column", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooterColumn = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooterColumn);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterColumn, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer-column',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooterContent = class NexusFooterContent {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooterContent, selector: "nexus-footer-content", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooterContent = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooterContent);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterContent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer-content',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooterContentTitle = class NexusFooterContentTitle {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterContentTitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooterContentTitle, selector: "nexus-footer-content-title", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooterContentTitle = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooterContentTitle);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterContentTitle, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer-content-title',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFooterLogo = class NexusFooterLogo {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterLogo, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFooterLogo, selector: "nexus-footer-logo", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFooterLogo = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFooterLogo);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFooterLogo, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-footer-logo',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusFormField = class NexusFormField {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFormField, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusFormField, selector: "nexus-form-field", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusFormField = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusFormField);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusFormField, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-form-field',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusGaugeChart = class NexusGaugeChart {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusGaugeChart, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusGaugeChart, selector: "nexus-gauge-chart", inputs: { currentValuePlaceholderStyle: "currentValuePlaceholderStyle", currentValueText: "currentValueText", customSegmentLabels: "customSegmentLabels", customSegmentStops: "customSegmentStops", dimensionUnit: "dimensionUnit", endColor: "endColor", fluidWidth: "fluidWidth", forceRender: "forceRender", height: "height", labelFontSize: "labelFontSize", maxSegmentLabels: "maxSegmentLabels", maxValue: "maxValue", minValue: "minValue", needleColor: "needleColor", needleHeightRatio: "needleHeightRatio", needleTransition: "needleTransition", needleTransitionDuration: "needleTransitionDuration", paddingHorizontal: "paddingHorizontal", paddingVertical: "paddingVertical", ringWidth: "ringWidth", segmentColors: "segmentColors", segmentValueFormatter: "segmentValueFormatter", segments: "segments", startColor: "startColor", svgAriaLabel: "svgAriaLabel", textColor: "textColor", value: "value", valueFormat: "valueFormat", valueTextFontSize: "valueTextFontSize", valueTextFontWeight: "valueTextFontWeight", width: "width" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusGaugeChart = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['currentValuePlaceholderStyle', 'currentValueText', 'customSegmentLabels', 'customSegmentStops', 'dimensionUnit', 'endColor', 'fluidWidth', 'forceRender', 'height', 'labelFontSize', 'maxSegmentLabels', 'maxValue', 'minValue', 'needleColor', 'needleHeightRatio', 'needleTransition', 'needleTransitionDuration', 'paddingHorizontal', 'paddingVertical', 'ringWidth', 'segmentColors', 'segmentValueFormatter', 'segments', 'startColor', 'svgAriaLabel', 'textColor', 'value', 'valueFormat', 'valueTextFontSize', 'valueTextFontWeight', 'width']
    })
], NexusGaugeChart);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusGaugeChart, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-gauge-chart',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['currentValuePlaceholderStyle', 'currentValueText', 'customSegmentLabels', 'customSegmentStops', 'dimensionUnit', 'endColor', 'fluidWidth', 'forceRender', 'height', 'labelFontSize', 'maxSegmentLabels', 'maxValue', 'minValue', 'needleColor', 'needleHeightRatio', 'needleTransition', 'needleTransitionDuration', 'paddingHorizontal', 'paddingVertical', 'ringWidth', 'segmentColors', 'segmentValueFormatter', 'segments', 'startColor', 'svgAriaLabel', 'textColor', 'value', 'valueFormat', 'valueTextFontSize', 'valueTextFontWeight', 'width']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusHeader = class NexusHeader {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusHeader, selector: "nexus-header", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusHeader = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusHeader);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeader, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-header',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusHeaderLogo = class NexusHeaderLogo {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeaderLogo, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusHeaderLogo, selector: "nexus-header-logo", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusHeaderLogo = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusHeaderLogo);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeaderLogo, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-header-logo',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusHeaderMenu = class NexusHeaderMenu {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeaderMenu, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusHeaderMenu, selector: "nexus-header-menu", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusHeaderMenu = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusHeaderMenu);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusHeaderMenu, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-header-menu',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusIcon = class NexusIcon {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusIcon, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusIcon, selector: "nexus-icon", inputs: { alt: "alt", content: "content", size: "size", sizeLock: "sizeLock", src: "src", type: "type" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusIcon = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['alt', 'content', 'size', 'sizeLock', 'src', 'type']
    })
], NexusIcon);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusIcon, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-icon',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['alt', 'content', 'size', 'sizeLock', 'src', 'type']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusInput = class NexusInput {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_disabledChange']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusInput, selector: "nexus-input", inputs: { attrId: "attrId", autocomplete: "autocomplete", disabled: "disabled", max: "max", maxLength: "maxLength", min: "min", minLength: "minLength", placeholder: "placeholder", readonly: "readonly", required: "required", type: "type", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusInput = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'autocomplete', 'disabled', 'max', 'maxLength', 'min', 'minLength', 'placeholder', 'readonly', 'required', 'type', 'value']
    })
], NexusInput);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusInput, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-input',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'autocomplete', 'disabled', 'max', 'maxLength', 'min', 'minLength', 'placeholder', 'readonly', 'required', 'type', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusLabel = class NexusLabel {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLabel, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusLabel, selector: "nexus-label", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusLabel = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusLabel);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLabel, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-label',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusLineChart = class NexusLineChart {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['nexusLineChartLoaded']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLineChart, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusLineChart, selector: "nexus-line-chart", inputs: { attrId: "attrId", axisLabelFontSize: "axisLabelFontSize", axisTickFontFamily: "axisTickFontFamily", axisTickFontSize: "axisTickFontSize", canvasHeight: "canvasHeight", canvasWidth: "canvasWidth", chartData: "chartData", chartId: "chartId", colorScheme: "colorScheme", data: "data", gridlines: "gridlines", height: "height", hideXAxis: "hideXAxis", hideXTicks: "hideXTicks", hideYAxis: "hideYAxis", hideYTicks: "hideYTicks", interpolation: "interpolation", inverse: "inverse", legend: "legend", legendFontSize: "legendFontSize", legendMetric: "legendMetric", legendWidth: "legendWidth", linearFormat: "linearFormat", linearMetric: "linearMetric", marginBottom: "marginBottom", marginLeft: "marginLeft", marginRight: "marginRight", marginTop: "marginTop", strokeWidth: "strokeWidth", tooltips: "tooltips", valueFormat: "valueFormat", valueMetric: "valueMetric", vertices: "vertices", width: "width", xLabel: "xLabel", xMetric: "xMetric", xTickFormat: "xTickFormat", xTickSize: "xTickSize", yLabel: "yLabel", yMetric: "yMetric", yTickFormat: "yTickFormat", yTickSize: "yTickSize" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusLineChart = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'interpolation', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearFormat', 'linearMetric', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'strokeWidth', 'tooltips', 'valueFormat', 'valueMetric', 'vertices', 'width', 'xLabel', 'xMetric', 'xTickFormat', 'xTickSize', 'yLabel', 'yMetric', 'yTickFormat', 'yTickSize']
    })
], NexusLineChart);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLineChart, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-line-chart',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'interpolation', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearFormat', 'linearMetric', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'strokeWidth', 'tooltips', 'valueFormat', 'valueMetric', 'vertices', 'width', 'xLabel', 'xMetric', 'xTickFormat', 'xTickSize', 'yLabel', 'yMetric', 'yTickFormat', 'yTickSize']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusLoader = class NexusLoader {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLoader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusLoader, selector: "nexus-loader", inputs: { fullscreen: "fullscreen", show: "show" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusLoader = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['fullscreen', 'show']
    })
], NexusLoader);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusLoader, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-loader',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['fullscreen', 'show']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusMenu = class NexusMenu {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMenu, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusMenu, selector: "nexus-menu", inputs: { open: "open", position: "position" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusMenu = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['open', 'position']
    })
], NexusMenu);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMenu, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-menu',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['open', 'position']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusMenuItem = class NexusMenuItem {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMenuItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusMenuItem, selector: "nexus-menu-item", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusMenuItem = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusMenuItem);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMenuItem, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-menu-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusMessage = class NexusMessage {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMessage, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusMessage, selector: "nexus-message", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusMessage = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusMessage);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusMessage, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-message',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusModal = class NexusModal {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModal, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusModal, selector: "nexus-modal", inputs: { fullscreen: "fullscreen", show: "show", size: "size" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusModal = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['fullscreen', 'show', 'size']
    })
], NexusModal);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModal, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-modal',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['fullscreen', 'show', 'size']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusModalBody = class NexusModalBody {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalBody, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusModalBody, selector: "nexus-modal-body", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusModalBody = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusModalBody);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalBody, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-modal-body',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusModalFooter = class NexusModalFooter {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalFooter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusModalFooter, selector: "nexus-modal-footer", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusModalFooter = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusModalFooter);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalFooter, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-modal-footer',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusModalHeader = class NexusModalHeader {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusModalHeader, selector: "nexus-modal-header", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusModalHeader = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusModalHeader);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalHeader, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-modal-header',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusModalHeaderSubtitle = class NexusModalHeaderSubtitle {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalHeaderSubtitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusModalHeaderSubtitle, selector: "nexus-modal-header-subtitle", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusModalHeaderSubtitle = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusModalHeaderSubtitle);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusModalHeaderSubtitle, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-modal-header-subtitle',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusNotification = class NexusNotification {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusNotification, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusNotification, selector: "nexus-notification", inputs: { variant: "variant" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusNotification = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['variant']
    })
], NexusNotification);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusNotification, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-notification',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['variant']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusOption = class NexusOption {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['triggerOptionSelected']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusOption, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusOption, selector: "nexus-option", inputs: { disabled: "disabled", keyhover: "keyhover", label: "label", multiple: "multiple", selected: "selected", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusOption = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['disabled', 'keyhover', 'label', 'multiple', 'selected', 'value'],
        methods: ['setPropsValue']
    })
], NexusOption);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusOption, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-option',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['disabled', 'keyhover', 'label', 'multiple', 'selected', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusPagination = class NexusPagination {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['changeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPagination, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusPagination, selector: "nexus-pagination", inputs: { current: "current", max: "max" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusPagination = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['current', 'max']
    })
], NexusPagination);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPagination, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-pagination',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['current', 'max']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusPieChart = class NexusPieChart {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['nexusPieChartLoaded']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPieChart, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusPieChart, selector: "nexus-pie-chart", inputs: { attrId: "attrId", canvasHeight: "canvasHeight", canvasWidth: "canvasWidth", chartData: "chartData", chartId: "chartId", colorScheme: "colorScheme", data: "data", height: "height", innerRadius: "innerRadius", inverse: "inverse", legend: "legend", legendFontSize: "legendFontSize", legendMetric: "legendMetric", legendWidth: "legendWidth", marginBottom: "marginBottom", marginLeft: "marginLeft", marginRight: "marginRight", marginTop: "marginTop", stroke: "stroke", strokeWidth: "strokeWidth", tooltips: "tooltips", valueFormat: "valueFormat", valueMetric: "valueMetric", width: "width" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusPieChart = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'height', 'innerRadius', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'stroke', 'strokeWidth', 'tooltips', 'valueFormat', 'valueMetric', 'width']
    })
], NexusPieChart);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPieChart, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-pie-chart',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'height', 'innerRadius', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'stroke', 'strokeWidth', 'tooltips', 'valueFormat', 'valueMetric', 'width']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusPinEntry = class NexusPinEntry {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['pinEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPinEntry, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusPinEntry, selector: "nexus-pin-entry", inputs: { disabled: "disabled", length: "length", type: "type" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusPinEntry = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['disabled', 'length', 'type']
    })
], NexusPinEntry);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusPinEntry, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-pin-entry',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['disabled', 'length', 'type']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusProgressBar = class NexusProgressBar {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusProgressBar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusProgressBar, selector: "nexus-progress-bar", inputs: { circle: "circle", error: "error", indeterminate: "indeterminate", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusProgressBar = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['circle', 'error', 'indeterminate', 'value']
    })
], NexusProgressBar);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusProgressBar, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-progress-bar',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['circle', 'error', 'indeterminate', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusProgressBarLabel = class NexusProgressBarLabel {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusProgressBarLabel, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusProgressBarLabel, selector: "nexus-progress-bar-label", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusProgressBarLabel = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusProgressBarLabel);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusProgressBarLabel, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-progress-bar-label',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusRadio = class NexusRadio {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusRadio, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusRadio, selector: "nexus-radio", inputs: { attrId: "attrId", checked: "checked", disabled: "disabled", name: "name", required: "required", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusRadio = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'checked', 'disabled', 'name', 'required', 'value']
    })
], NexusRadio);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusRadio, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-radio',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'checked', 'disabled', 'name', 'required', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusSearch = class NexusSearch {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearch, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusSearch, selector: "nexus-search", inputs: { debounceInterval: "debounceInterval" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusSearch = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['debounceInterval']
    })
], NexusSearch);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearch, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-search',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['debounceInterval']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusSearchList = class NexusSearchList {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearchList, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusSearchList, selector: "nexus-search-list", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusSearchList = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusSearchList);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearchList, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-search-list',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusSearchListItem = class NexusSearchListItem {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearchListItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusSearchListItem, selector: "nexus-search-list-item", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusSearchListItem = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusSearchListItem);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSearchListItem, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-search-list-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusSelect = class NexusSelect {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_disabledChange', 'triggerSelection', 'closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSelect, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusSelect, selector: "nexus-select", inputs: { attrId: "attrId", delimiter: "delimiter", disabled: "disabled", multiple: "multiple", placeholder: "placeholder", required: "required", type: "type", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusSelect = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'delimiter', 'disabled', 'multiple', 'placeholder', 'required', 'type', 'value']
    })
], NexusSelect);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSelect, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-select',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'delimiter', 'disabled', 'multiple', 'placeholder', 'required', 'type', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusSlider = class NexusSlider {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_disabledChange']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSlider, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusSlider, selector: "nexus-slider", inputs: { attrId: "attrId", disabled: "disabled", max: "max", min: "min", required: "required" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusSlider = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'disabled', 'max', 'min', 'required']
    })
], NexusSlider);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusSlider, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-slider',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'disabled', 'max', 'min', 'required']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusStackedBarChart = class NexusStackedBarChart {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['nexusStackedBarChartLoaded']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStackedBarChart, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusStackedBarChart, selector: "nexus-stacked-bar-chart", inputs: { attrId: "attrId", axisLabelFontSize: "axisLabelFontSize", axisTickFontFamily: "axisTickFontFamily", axisTickFontSize: "axisTickFontSize", barStroke: "barStroke", barStrokeWidth: "barStrokeWidth", canvasHeight: "canvasHeight", canvasWidth: "canvasWidth", chartData: "chartData", chartId: "chartId", colorScheme: "colorScheme", data: "data", gridlines: "gridlines", height: "height", hideXAxis: "hideXAxis", hideXTicks: "hideXTicks", hideYAxis: "hideYAxis", hideYTicks: "hideYTicks", inverse: "inverse", legend: "legend", legendFontSize: "legendFontSize", legendMetric: "legendMetric", legendWidth: "legendWidth", linearDomain: "linearDomain", linearFormat: "linearFormat", linearMetric: "linearMetric", linearTickFormat: "linearTickFormat", marginBottom: "marginBottom", marginLeft: "marginLeft", marginRight: "marginRight", marginTop: "marginTop", maxBarWidth: "maxBarWidth", ordinalMetric: "ordinalMetric", orientation: "orientation", seriesMetric: "seriesMetric", stroke: "stroke", strokeWidth: "strokeWidth", tooltips: "tooltips", valueMetric: "valueMetric", width: "width", xLabel: "xLabel", xTickSize: "xTickSize", yLabel: "yLabel", yTickSize: "yTickSize" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusStackedBarChart = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'barStroke', 'barStrokeWidth', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearDomain', 'linearFormat', 'linearMetric', 'linearTickFormat', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'maxBarWidth', 'ordinalMetric', 'orientation', 'seriesMetric', 'stroke', 'strokeWidth', 'tooltips', 'valueMetric', 'width', 'xLabel', 'xTickSize', 'yLabel', 'yTickSize']
    })
], NexusStackedBarChart);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStackedBarChart, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-stacked-bar-chart',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'axisLabelFontSize', 'axisTickFontFamily', 'axisTickFontSize', 'barStroke', 'barStrokeWidth', 'canvasHeight', 'canvasWidth', 'chartData', 'chartId', 'colorScheme', 'data', 'gridlines', 'height', 'hideXAxis', 'hideXTicks', 'hideYAxis', 'hideYTicks', 'inverse', 'legend', 'legendFontSize', 'legendMetric', 'legendWidth', 'linearDomain', 'linearFormat', 'linearMetric', 'linearTickFormat', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'maxBarWidth', 'ordinalMetric', 'orientation', 'seriesMetric', 'stroke', 'strokeWidth', 'tooltips', 'valueMetric', 'width', 'xLabel', 'xTickSize', 'yLabel', 'yTickSize']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusStepper = class NexusStepper {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStepper, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusStepper, selector: "nexus-stepper", inputs: { steppertype: "steppertype" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusStepper = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['steppertype']
    })
], NexusStepper);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStepper, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-stepper',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['steppertype']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusStepperItem = class NexusStepperItem {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStepperItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusStepperItem, selector: "nexus-stepper-item", inputs: { status: "status" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusStepperItem = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['status'],
        methods: ['setPropsValue']
    })
], NexusStepperItem);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusStepperItem, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-stepper-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['status']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTabBar = class NexusTabBar {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTabBar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTabBar, selector: "nexus-tab-bar", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTabBar = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusTabBar);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTabBar, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tab-bar',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTable = class NexusTable {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['rowSelect', 'tableChangeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTable, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTable, selector: "nexus-table", inputs: { attrId: "attrId", columns: "columns", currentPage: "currentPage", enablePageSizeOption: "enablePageSizeOption", maxHeight: "maxHeight", pageSize: "pageSize", pageSizeLabel: "pageSizeLabel", pageSizeOpt: "pageSizeOpt", pagination: "pagination", rowSelection: "rowSelection", rows: "rows", sortAscIcon: "sortAscIcon", sortDefaultIcon: "sortDefaultIcon", sortDescIcon: "sortDescIcon", totalItems: "totalItems", type: "type" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTable = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'columns', 'currentPage', 'enablePageSizeOption', 'maxHeight', 'pageSize', 'pageSizeLabel', 'pageSizeOpt', 'pagination', 'rowSelection', 'rows', 'sortAscIcon', 'sortDefaultIcon', 'sortDescIcon', 'totalItems', 'type']
    })
], NexusTable);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTable, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-table',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'columns', 'currentPage', 'enablePageSizeOption', 'maxHeight', 'pageSize', 'pageSizeLabel', 'pageSizeOpt', 'pagination', 'rowSelection', 'rows', 'sortAscIcon', 'sortDefaultIcon', 'sortDescIcon', 'totalItems', 'type']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTextarea = class NexusTextarea {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_disabledChange']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTextarea, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTextarea, selector: "nexus-textarea", inputs: { attrId: "attrId", cols: "cols", disabled: "disabled", maxLength: "maxLength", minLength: "minLength", placeholder: "placeholder", required: "required", rows: "rows", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTextarea = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'cols', 'disabled', 'maxLength', 'minLength', 'placeholder', 'required', 'rows', 'value']
    })
], NexusTextarea);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTextarea, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-textarea',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'cols', 'disabled', 'maxLength', 'minLength', 'placeholder', 'required', 'rows', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusToast = class NexusToast {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeEvent']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusToast, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusToast, selector: "nexus-toast", inputs: { autoClose: "autoClose", closeable: "closeable", iconSrc: "iconSrc", position: "position", show: "show", variant: "variant" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusToast = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['autoClose', 'closeable', 'iconSrc', 'position', 'show', 'variant']
    })
], NexusToast);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusToast, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-toast',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['autoClose', 'closeable', 'iconSrc', 'position', 'show', 'variant']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusToggle = class NexusToggle {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusToggle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusToggle, selector: "nexus-toggle", inputs: { attrId: "attrId", disabled: "disabled", labelActive: "labelActive", labelInactive: "labelInactive", required: "required", size: "size", toggled: "toggled", type: "type", value: "value" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusToggle = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['attrId', 'disabled', 'labelActive', 'labelInactive', 'required', 'size', 'toggled', 'type', 'value']
    })
], NexusToggle);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusToggle, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-toggle',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['attrId', 'disabled', 'labelActive', 'labelInactive', 'required', 'size', 'toggled', 'type', 'value']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTooltip = class NexusTooltip {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTooltip, selector: "nexus-tooltip", inputs: { allowClick: "allowClick", attrId: "attrId", placement: "placement" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTooltip = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['allowClick', 'attrId', 'placement']
    })
], NexusTooltip);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltip, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tooltip',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['allowClick', 'attrId', 'placement']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTooltipContent = class NexusTooltipContent {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_closeTooltip']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltipContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTooltipContent, selector: "nexus-tooltip-content", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTooltipContent = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        methods: ['_show']
    })
], NexusTooltipContent);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltipContent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tooltip-content',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTooltipTrigger = class NexusTooltipTrigger {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltipTrigger, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTooltipTrigger, selector: "nexus-tooltip-trigger", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTooltipTrigger = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusTooltipTrigger);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTooltipTrigger, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tooltip-trigger',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTree = class NexusTree {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTree, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTree, selector: "nexus-tree", inputs: { open: "open" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTree = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined,
        inputs: ['open']
    })
], NexusTree);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTree, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tree',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>',
                    inputs: ['open']
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTreeContent = class NexusTreeContent {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTreeContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTreeContent, selector: "nexus-tree-content", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTreeContent = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusTreeContent);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTreeContent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tree-content',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
export let NexusTreeTrigger = class NexusTreeTrigger {
    z;
    el;
    constructor(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['_toggleTree']);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTreeTrigger, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: NexusTreeTrigger, selector: "nexus-tree-trigger", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
};
NexusTreeTrigger = __decorate([
    ProxyCmp({
        defineCustomElementFn: undefined
    })
], NexusTreeTrigger);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: NexusTreeTrigger, decorators: [{
            type: Component,
            args: [{
                    selector: 'nexus-tree-trigger',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });
//# sourceMappingURL=data:application/json;base64,